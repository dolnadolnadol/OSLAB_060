1.6) 3, 7

2) Q1 : processing_row = tRow;
        processing_col = tCol;
        datA = a;
        datB = b;
        datC = c;
   Q2 : public
   Q3 : for(int i = 0; i < datA.data[0].length; i++){
            datC.data[processing_row][processing_col] += datA.data[processing_row][i]*datB.data[i][processing_col];
        }
   Q4 : Thread[][] thr = new Thread[matC_r][matC_c];
        
        for(int i = 0 ; i < inputA.length; i++){
            for(int j = 0; j < inputB[0].length; j++){
                thr[i][j] = new Thread(new MatrixMulThread(i, j, matA, matB, matC));
                thr[i][j].start();             
            }
        }
   Q5 : try{
            for(int i = 0; i < inputA.length; i++){
                for(int j = 0; j < inputB[0].length; j++){
                    thr[i][j].join();
                }
            }
        }catch(Exception e){
            System.out.println(e);
        }
